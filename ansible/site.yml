# site.yml
#deploy met: $ ansible-playbook -i hosts site.yml
##Eerste server configureren
- hosts: pu001
  become: true
  roles: 
    -bertvv.rh-base
 # roles: bertvv.rh-base
  tasks:
#Toevoegen van de epel repositories  
   - name: 1.Check if EPEL repo is already configured.
    stat: path="{{ epel_repofile_path }}""
    register: epel_repofile_result
 
   - name: 2.Install EPEL repo.
    yum:
     name: "{{ epel_repo_url }}"
     state: present
    register: result
    when: not epel_repofile_result.stat.exists
  
   - name: 3.Import EPEL GPG key.
     rpm_key:
      key: "{{ epel_repo_gpg_key_url }}"
      state: present
    when: not epel_repofile_result.stat.exists
   
   #enable firewall
   handlers:
   - name: Enable firewalld
      service: name=firewalld state=started enabled=yes
   tasks:
   - name: Set dmz as default policy
      command: firewall-cmd --set-default-zone=dmz

   - name: Allow http/https
      command: firewall-cmd --zone=dmz --permanent --add-service=http --add-service=https

 
   #status van SELinux naar 'Enforcing' veranderen
   - name: Enable SELinux
    selinux:
         policy: targeted
         state: enforcing

   #installeren van bash,bind,git,nano,tree,vim,wget
   - name: install packages
     apt: name={{ item }} update_cache=yes state=latest
     with_items:
       - bash-completion
       - bind-utils
       - git
       - nano
       - tree
       - vim-enhanced
       - wget
   
   #Gebruiken voor jezelf aanmaken
   - name: Create a user
       user: dylano
       password: 'admin'
       group: admin
       groups: sudo
       state: present
       shell: /bin/bash
       system: no
       createhome: yes
       home: /home/dylano

   #Genereer een SSH-key    
   - name: create 2048 bits ssh key
     user:
      name: dylano
      generate_ssh_keys: yes
      ssh_key_bits: 2048
      ssh_key_file: .ssh/id_rsa


    #enable firewall voor http,https en ip 
  #- firewalld:
    #source: 192.0.2.0/24
    #zone: internal
    #state: enabled

  #- firewalld:
   #zone: dmz
    #service: http
    #permanent: true
    #state: enabled   

  #- firewalld:
   # service: https
    #permanent: true
    #state: enabled